name: A book store - Deploy
on: push
jobs:
  lint_check:
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: flake8 Lint
        uses: py-actions/flake8@v2
        with:
          ignore: "E501"
          max-line-length: "100"
          path: "src"
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v4
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          virtualenvs-create: true
          virtualenvs-in-project: false
          virtualenvs-path: .venv
          installer-parallel: true
#----------------------------------------------
#       load cached venv if cache exists
#----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
#----------------------------------------------
# install dependencies if cache does not exist
#----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
#----------------------------------------------
# install your root project, if required
#----------------------------------------------
      - name: Install project
        run: poetry install --no-interaction
      - name: Run tests
        run: |
          source .venv/bin/activate
          python -m a_book_store.app
